from __future__ import annotations
import numpy as np
from utils.error import ERROR, MEASUREMENT
from utils.data_improved import DatasetFactory, ModelDataset, CastDataset
import sys


def _lookup_models(): 
    print(sys.prefix)
    print("python looks for models in this locations:")

    for path in sys.path:
        print(f"-{path}")


def create_sample_weather_data():
    """
    Returns the weather JSON data as a string for parsing
    """
    return '''{"city_id":"2762372","city_name":"Villach","country_code":"AT","data":[{"app_temp":17.1,"azimuth":341.4,"clouds":76,"datetime":"2025-08-06:22","dewpt":13.8,"dhi":0,"dni":0,"elev_angle":-25,"ghi":0,"h_angle":null,"pod":"n","precip":0,"pres":960,"revision_status":"interim","revision_version":"0.0","rh":81,"slp":1023,"snow":0,"solar_rad":0,"temp":17.1,"timestamp_local":"2025-08-07T00:00:00","timestamp_utc":"2025-08-06T22:00:00","ts":1754517600,"uv":0,"vis":16,"weather":{"description":"Overcast clouds","code":804,"icon":"c04n"},"wind_dir":0,"wind_gust_spd":2.6,"wind_spd":1.03},{"app_temp":16.7,"azimuth":357.2,"clouds":78,"datetime":"2025-08-06:23","dewpt":13.6,"dhi":0,"dni":0,"elev_angle":-27,"ghi":0,"h_angle":null,"pod":"n","precip":0,"pres":960,"revision_status":"interim","revision_version":"0.0","rh":82,"slp":1023,"snow":0,"solar_rad":0,"temp":16.7,"timestamp_local":"2025-08-07T01:00:00","timestamp_utc":"2025-08-06T23:00:00","ts":1754521200,"uv":0,"vis":16,"weather":{"description":"Overcast clouds","code":804,"icon":"c04n"},"wind_dir":0,"wind_gust_spd":2.1,"wind_spd":0.51},{"app_temp":16.8,"azimuth":13.3,"clouds":78,"datetime":"2025-08-07:00","dewpt":13.3,"dhi":0,"dni":0,"elev_angle":-26,"ghi":0,"h_angle":null,"pod":"n","precip":0,"pres":960,"revision_status":"interim","revision_version":"0.0","rh":80,"slp":1023,"snow":0,"solar_rad":0,"temp":16.8,"timestamp_local":"2025-08-07T02:00:00","timestamp_utc":"2025-08-07T00:00:00","ts":1754524800,"uv":0,"vis":16,"weather":{"description":"Overcast clouds","code":804,"icon":"c04n"},"wind_dir":0,"wind_gust_spd":2.1,"wind_spd":0.51},{"app_temp":16.3,"azimuth":28.6,"clouds":76,"datetime":"2025-08-07:01","dewpt":13.2,"dhi":0,"dni":0,"elev_angle":-22.4,"ghi":0,"h_angle":null,"pod":"n","precip":0,"pres":960,"revision_status":"interim","revision_version":"0.0","rh":82,"slp":1022,"snow":0,"solar_rad":0,"temp":16.3,"timestamp_local":"2025-08-07T03:00:00","timestamp_utc":"2025-08-07T01:00:00","ts":1754528400,"uv":0,"vis":16,"weather":{"description":"Overcast clouds","code":804,"icon":"c04n"},"wind_dir":0,"wind_gust_spd":2.1,"wind_spd":0.51},{"app_temp":15.7,"azimuth":42.5,"clouds":66,"datetime":"2025-08-07:02","dewpt":13.2,"dhi":0,"dni":0,"elev_angle":-16.4,"ghi":0,"h_angle":null,"pod":"n","precip":0,"pres":960,"revision_status":"interim","revision_version":"0.0","rh":85,"slp":1023,"snow":0,"solar_rad":0,"temp":15.7,"timestamp_local":"2025-08-07T04:00:00","timestamp_utc":"2025-08-07T02:00:00","ts":1754532000,"uv":0,"vis":16,"weather":{"description":"Broken clouds","code":803,"icon":"c03n"},"wind_dir":0,"wind_gust_spd":2.1,"wind_spd":0.51},{"app_temp":15.2,"azimuth":54.9,"clouds":58,"datetime":"2025-08-07:03","dewpt":13.2,"dhi":0,"dni":0,"elev_angle":-8.7,"ghi":0,"h_angle":null,"pod":"n","precip":0,"pres":960,"revision_status":"interim","revision_version":"0.0","rh":88,"slp":1023,"snow":0,"solar_rad":0,"temp":15.2,"timestamp_local":"2025-08-07T05:00:00","timestamp_utc":"2025-08-07T03:00:00","ts":1754535600,"uv":0,"vis":16,"weather":{"description":"Broken clouds","code":803,"icon":"c03n"},"wind_dir":0,"wind_gust_spd":2.1,"wind_spd":1.03},{"app_temp":14.8,"azimuth":66.2,"clouds":55,"datetime":"2025-08-07:04","dewpt":13,"dhi":7,"dni":18,"elev_angle":0.3,"ghi":2,"h_angle":null,"pod":"d","precip":0,"pres":960,"revision_status":"interim","revision_version":"0.0","rh":89,"slp":1022,"snow":0,"solar_rad":9,"temp":14.8,"timestamp_local":"2025-08-07T06:00:00","timestamp_utc":"2025-08-07T04:00:00","ts":1754539200,"uv":1.1,"vis":16,"weather":{"description":"Broken clouds","code":803,"icon":"c03n"},"wind_dir":0,"wind_gust_spd":2.1,"wind_spd":0.51},{"app_temp":15.4,"azimuth":76.9,"clouds":49,"datetime":"2025-08-07:05","dewpt":12.7,"dhi":51,"dni":470,"elev_angle":10.1,"ghi":125,"h_angle":null,"pod":"d","precip":0,"pres":960,"revision_status":"interim","revision_version":"0.0","rh":84,"slp":1023,"snow":0,"solar_rad":111,"temp":15.4,"timestamp_local":"2025-08-07T07:00:00","timestamp_utc":"2025-08-07T05:00:00","ts":1754542800,"uv":1.2,"vis":16,"weather":{"description":"Broken clouds","code":803,"icon":"c03d"},"wind_dir":0,"wind_gust_spd":2.1,"wind_spd":0.51},{"app_temp":16.4,"azimuth":87.4,"clouds":48,"datetime":"2025-08-07:06","dewpt":13.1,"dhi":75,"dni":663,"elev_angle":20.2,"ghi":298,"h_angle":null,"pod":"d","precip":0,"pres":960,"revision_status":"interim","revision_version":"0.0","rh":81,"slp":1022,"snow":0,"solar_rad":265,"temp":16.4,"timestamp_local":"2025-08-07T08:00:00","timestamp_utc":"2025-08-07T06:00:00","ts":1754546400,"uv":1.5,"vis":16,"weather":{"description":"Broken clouds","code":803,"icon":"c03d"},"wind_dir":0,"wind_gust_spd":2.6,"wind_spd":1.03},{"app_temp":17.8,"azimuth":98.6,"clouds":45,"datetime":"2025-08-07:07","dewpt":13.1,"dhi":91,"dni":769,"elev_angle":30.5,"ghi":475,"h_angle":null,"pod":"d","precip":0,"pres":960,"revision_status":"interim","revision_version":"0.0","rh":74,"slp":1022,"snow":0,"solar_rad":429,"temp":17.8,"timestamp_local":"2025-08-07T09:00:00","timestamp_utc":"2025-08-07T07:00:00","ts":1754550000,"uv":2.3,"vis":16,"weather":{"description":"Broken clouds","code":803,"icon":"c03d"},"wind_dir":0,"wind_gust_spd":2.6,"wind_spd":1.03},{"app_temp":18.9,"azimuth":111.5,"clouds":49,"datetime":"2025-08-07:08","dewpt":13.5,"dhi":103,"dni":834,"elev_angle":40.4,"ghi":637,"h_angle":null,"pod":"d","precip":0,"pres":960,"revision_status":"interim","revision_version":"0.0","rh":70,"slp":1022,"snow":0,"solar_rad":563,"temp":19.1,"timestamp_local":"2025-08-07T10:00:00","timestamp_utc":"2025-08-07T08:00:00","ts":1754553600,"uv":3.2,"vis":16,"weather":{"description":"Broken clouds","code":803,"icon":"c03d"},"wind_dir":0,"wind_gust_spd":3.1,"wind_spd":1.03},{"app_temp":20.5,"azimuth":127.5,"clouds":39,"datetime":"2025-08-07:09","dewpt":13.4,"dhi":110,"dni":875,"elev_angle":49.4,"ghi":767,"h_angle":null,"pod":"d","precip":0,"pres":959,"revision_status":"interim","revision_version":"0.0","rh":63,"slp":1022,"snow":0,"solar_rad":711,"temp":20.7,"timestamp_local":"2025-08-07T11:00:00","timestamp_utc":"2025-08-07T09:00:00","ts":1754557200,"uv":4.7,"vis":16,"weather":{"description":"Scattered clouds","code":802,"icon":"c02d"},"wind_dir":0,"wind_gust_spd":3.1,"wind_spd":1.03},{"app_temp":22,"azimuth":148.6,"clouds":35,"datetime":"2025-08-07:10","dewpt":12.8,"dhi":115,"dni":897,"elev_angle":56.3,"ghi":854,"h_angle":null,"pod":"d","precip":0,"pres":958,"revision_status":"interim","revision_version":"0.0","rh":55,"slp":1021,"snow":0,"solar_rad":802,"temp":22.3,"timestamp_local":"2025-08-07T12:00:00","timestamp_utc":"2025-08-07T10:00:00","ts":1754560800,"uv":5.9,"vis":16,"weather":{"description":"Scattered clouds","code":802,"icon":"c02d"},"wind_dir":135,"wind_gust_spd":3.1,"wind_spd":1.54},{"app_temp":23.4,"azimuth":175.2,"clouds":36,"datetime":"2025-08-07:11","dewpt":12.7,"dhi":117,"dni":906,"elev_angle":59.5,"ghi":890,"h_angle":null,"pod":"d","precip":0,"pres":958,"revision_status":"interim","revision_version":"0.0","rh":50,"slp":1020,"snow":0,"solar_rad":834,"temp":23.7,"timestamp_local":"2025-08-07T13:00:00","timestamp_utc":"2025-08-07T11:00:00","ts":1754564400,"uv":6.3,"vis":16,"weather":{"description":"Scattered clouds","code":802,"icon":"c02d"},"wind_dir":157,"wind_gust_spd":3.6,"wind_spd":2.06},{"app_temp":24.8,"azimuth":202.9,"clouds":31,"datetime":"2025-08-07:12","dewpt":13.2,"dhi":116,"dni":902,"elev_angle":57.9,"ghi":872,"h_angle":null,"pod":"d","precip":0,"pres":958,"revision_status":"interim","revision_version":"0.0","rh":48,"slp":1020,"snow":0,"solar_rad":826,"temp":25,"timestamp_local":"2025-08-07T14:00:00","timestamp_utc":"2025-08-07T12:00:00","ts":1754568000,"uv":6.4,"vis":16,"weather":{"description":"Scattered clouds","code":802,"icon":"c02d"},"wind_dir":157,"wind_gust_spd":4.1,"wind_spd":2.06},{"app_temp":26.3,"azimuth":226,"clouds":26,"datetime":"2025-08-07:13","dewpt":13.5,"dhi":112,"dni":884,"elev_angle":52,"ghi":802,"h_angle":null,"pod":"d","precip":0,"pres":957,"revision_status":"interim","revision_version":"0.0","rh":45,"slp":1019,"snow":0,"solar_rad":765,"temp":26.4,"timestamp_local":"2025-08-07T15:00:00","timestamp_utc":"2025-08-07T13:00:00","ts":1754571600,"uv":5.7,"vis":16,"weather":{"description":"Scattered clouds","code":802,"icon":"c02d"},"wind_dir":157,"wind_gust_spd":4.1,"wind_spd":2.06},{"app_temp":27,"azimuth":243.5,"clouds":26,"datetime":"2025-08-07:14","dewpt":13,"dhi":106,"dni":850,"elev_angle":43.6,"ghi":685,"h_angle":null,"pod":"d","precip":0,"pres":956,"revision_status":"interim","revision_version":"0.0","rh":42,"slp":1018,"snow":0,"solar_rad":654,"temp":27,"timestamp_local":"2025-08-07T16:00:00","timestamp_utc":"2025-08-07T14:00:00","ts":1754575200,"uv":4.4,"vis":16,"weather":{"description":"Scattered clouds","code":802,"icon":"c02d"},"wind_dir":202,"wind_gust_spd":4.6,"wind_spd":2.57},{"app_temp":27.2,"azimuth":257.2,"clouds":37,"datetime":"2025-08-07:15","dewpt":13,"dhi":95,"dni":794,"elev_angle":33.9,"ghi":532,"h_angle":null,"pod":"d","precip":0,"pres":956,"revision_status":"interim","revision_version":"0.0","rh":41,"slp":1018,"snow":0,"solar_rad":497,"temp":27.4,"timestamp_local":"2025-08-07T17:00:00","timestamp_utc":"2025-08-07T15:00:00","ts":1754578800,"uv":2.8,"vis":16,"weather":{"description":"Scattered clouds","code":802,"icon":"c02d"},"wind_dir":157,"wind_gust_spd":4.6,"wind_spd":2.57},{"app_temp":27,"azimuth":268.8,"clouds":29,"datetime":"2025-08-07:16","dewpt":13.4,"dhi":81,"dni":705,"elev_angle":23.6,"ghi":357,"h_angle":null,"pod":"d","precip":0,"pres":956,"revision_status":"interim","revision_version":"0.0","rh":43,"slp":1018,"snow":0,"solar_rad":339,"temp":27,"timestamp_local":"2025-08-07T18:00:00","timestamp_utc":"2025-08-07T16:00:00","ts":1754582400,"uv":2,"vis":16,"weather":{"description":"Scattered clouds","code":802,"icon":"c02d"},"wind_dir":0,"wind_gust_spd":4.6,"wind_spd":2.57},{"app_temp":25.1,"azimuth":279.5,"clouds":33,"datetime":"2025-08-07:17","dewpt":14.3,"dhi":60,"dni":549,"elev_angle":13.4,"ghi":180,"h_angle":null,"pod":"d","precip":0,"pres":956,"revision_status":"interim","revision_version":"0.0","rh":51,"slp":1018,"snow":0,"solar_rad":169,"temp":25.2,"timestamp_local":"2025-08-07T19:00:00","timestamp_utc":"2025-08-07T17:00:00","ts":1754586000,"uv":1.5,"vis":16,"weather":{"description":"Scattered clouds","code":802,"icon":"c02d"},"wind_dir":0,"wind_gust_spd":4.1,"wind_spd":2.57},{"app_temp":24.2,"azimuth":290,"clouds":30,"datetime":"2025-08-07:18","dewpt":14.1,"dhi":26,"dni":211,"elev_angle":3.4,"ghi":30,"h_angle":null,"pod":"d","precip":0,"pres":956,"revision_status":"interim","revision_version":"0.0","rh":53,"slp":1019,"snow":0,"solar_rad":28,"temp":24.3,"timestamp_local":"2025-08-07T20:00:00","timestamp_utc":"2025-08-07T18:00:00","ts":1754589600,"uv":1.4,"vis":16,"weather":{"description":"Scattered clouds","code":802,"icon":"c02n"},"wind_dir":0,"wind_gust_spd":3.6,"wind_spd":2.06},{"app_temp":22.6,"azimuth":301,"clouds":29,"datetime":"2025-08-07:19","dewpt":14.8,"dhi":0,"dni":0,"elev_angle":-5.9,"ghi":0,"h_angle":null,"pod":"n","precip":0,"pres":958,"revision_status":"interim","revision_version":"0.0","rh":61,"slp":1020,"snow":0,"solar_rad":0,"temp":22.7,"timestamp_local":"2025-08-07T21:00:00","timestamp_utc":"2025-08-07T19:00:00","ts":1754593200,"uv":0,"vis":16,"weather":{"description":"Scattered clouds","code":802,"icon":"c02n"},"wind_dir":0,"wind_gust_spd":3.1,"wind_spd":1.54},{"app_temp":20.7,"azimuth":313.1,"clouds":40,"datetime":"2025-08-07:20","dewpt":14.7,"dhi":0,"dni":0,"elev_angle":-14.1,"ghi":0,"h_angle":null,"pod":"n","precip":0,"pres":958,"revision_status":"interim","revision_version":"0.0","rh":68,"slp":1020,"snow":0,"solar_rad":0,"temp":20.8,"timestamp_local":"2025-08-07T22:00:00","timestamp_utc":"2025-08-07T20:00:00","ts":1754596800,"uv":0,"vis":16,"weather":{"description":"Scattered clouds","code":802,"icon":"c02n"},"wind_dir":0,"wind_gust_spd":2.6,"wind_spd":1.03},{"app_temp":19.5,"azimuth":326.5,"clouds":51,"datetime":"2025-08-07:21","dewpt":14.8,"dhi":0,"dni":0,"elev_angle":-20.8,"ghi":0,"h_angle":null,"pod":"n","precip":0,"pres":958,"revision_status":"interim","revision_version":"0.0","rh":74,"slp":1021,"snow":0,"solar_rad":0,"temp":19.6,"timestamp_local":"2025-08-07T23:00:00","timestamp_utc":"2025-08-07T21:00:00","ts":1754600400,"uv":0,"vis":16,"weather":{"description":"Broken clouds","code":803,"icon":"c03n"},"wind_dir":0,"wind_gust_spd":2.6,"wind_spd":1.03}],"lat":46.61028,"lon":13.85583,"sources":["112130-99999","imerg","era5","sat","radar"],"state_code":"02","station_id":"112130-99999","timezone":"Europe/Vienna"}'''


def main():
    """
    Streamlined main function using the new Dataset classes.
    """
    print("🌤️ STMCast NWP - Weather Data Processing")
    print("=" * 60)
    
    # Get real weather data
    weather_json = create_sample_weather_data()
    
    print("\n📥 Creating datasets...")
    
    # Create Model Dataset (automatically loads data)
    model_dataset = ModelDataset.from_json_string(weather_json)
    print(f"✅ {model_dataset}")
    
    # Create Cast Dataset with synthetic noise from model data
    cast_dataset = DatasetFactory.create_cast_from_model_data(
        model_json=weather_json,
        station_id="VILLACH_SYNTHETIC", 
        noise_level=0.08  # 8% noise
    )
    print(f"✅ {cast_dataset}")
    
    # Show detailed summaries
    print(model_dataset.summary())
    print(cast_dataset.summary())
    
    # Calculate errors for first few measurements
    print("\n🔍 Error Analysis (first 5 measurements):")
    print("=" * 50)
    
    for i in range(min(5, len(model_dataset))):
        error_calc = ERROR(model_dataset[i], cast_dataset[i])
        error_vector = error_calc.error
        print(f"Measurement {i+1}: Wind={error_vector[0]:+6.2f}, Temp={error_vector[1]:+6.2f}, Pressure={error_vector[2]:+6.1f}")
    
    print(f"\n🎯 Analysis complete!")
    print(f"   Model validation: {'✅ PASSED' if model_dataset.validate_data() else '❌ FAILED'}")
    print(f"   Cast validation:  {'✅ PASSED' if cast_dataset.validate_data() else '❌ FAILED'}")
    
    return model_dataset, cast_dataset




if __name__ == "__main__":
    main()
